// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// RegisterAddHostsClusterCreatedCode is the HTTP code returned for type RegisterAddHostsClusterCreated
const RegisterAddHostsClusterCreatedCode int = 201

/*RegisterAddHostsClusterCreated Success.

swagger:response registerAddHostsClusterCreated
*/
type RegisterAddHostsClusterCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewRegisterAddHostsClusterCreated creates RegisterAddHostsClusterCreated with default headers values
func NewRegisterAddHostsClusterCreated() *RegisterAddHostsClusterCreated {

	return &RegisterAddHostsClusterCreated{}
}

// WithPayload adds the payload to the register add hosts cluster created response
func (o *RegisterAddHostsClusterCreated) WithPayload(payload *models.Cluster) *RegisterAddHostsClusterCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register add hosts cluster created response
func (o *RegisterAddHostsClusterCreated) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterAddHostsClusterCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterAddHostsClusterBadRequestCode is the HTTP code returned for type RegisterAddHostsClusterBadRequest
const RegisterAddHostsClusterBadRequestCode int = 400

/*RegisterAddHostsClusterBadRequest Error.

swagger:response registerAddHostsClusterBadRequest
*/
type RegisterAddHostsClusterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterAddHostsClusterBadRequest creates RegisterAddHostsClusterBadRequest with default headers values
func NewRegisterAddHostsClusterBadRequest() *RegisterAddHostsClusterBadRequest {

	return &RegisterAddHostsClusterBadRequest{}
}

// WithPayload adds the payload to the register add hosts cluster bad request response
func (o *RegisterAddHostsClusterBadRequest) WithPayload(payload *models.Error) *RegisterAddHostsClusterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register add hosts cluster bad request response
func (o *RegisterAddHostsClusterBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterAddHostsClusterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterAddHostsClusterUnauthorizedCode is the HTTP code returned for type RegisterAddHostsClusterUnauthorized
const RegisterAddHostsClusterUnauthorizedCode int = 401

/*RegisterAddHostsClusterUnauthorized Unauthorized.

swagger:response registerAddHostsClusterUnauthorized
*/
type RegisterAddHostsClusterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewRegisterAddHostsClusterUnauthorized creates RegisterAddHostsClusterUnauthorized with default headers values
func NewRegisterAddHostsClusterUnauthorized() *RegisterAddHostsClusterUnauthorized {

	return &RegisterAddHostsClusterUnauthorized{}
}

// WithPayload adds the payload to the register add hosts cluster unauthorized response
func (o *RegisterAddHostsClusterUnauthorized) WithPayload(payload *models.InfraError) *RegisterAddHostsClusterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register add hosts cluster unauthorized response
func (o *RegisterAddHostsClusterUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterAddHostsClusterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterAddHostsClusterForbiddenCode is the HTTP code returned for type RegisterAddHostsClusterForbidden
const RegisterAddHostsClusterForbiddenCode int = 403

/*RegisterAddHostsClusterForbidden Forbidden.

swagger:response registerAddHostsClusterForbidden
*/
type RegisterAddHostsClusterForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewRegisterAddHostsClusterForbidden creates RegisterAddHostsClusterForbidden with default headers values
func NewRegisterAddHostsClusterForbidden() *RegisterAddHostsClusterForbidden {

	return &RegisterAddHostsClusterForbidden{}
}

// WithPayload adds the payload to the register add hosts cluster forbidden response
func (o *RegisterAddHostsClusterForbidden) WithPayload(payload *models.InfraError) *RegisterAddHostsClusterForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register add hosts cluster forbidden response
func (o *RegisterAddHostsClusterForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterAddHostsClusterForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterAddHostsClusterInternalServerErrorCode is the HTTP code returned for type RegisterAddHostsClusterInternalServerError
const RegisterAddHostsClusterInternalServerErrorCode int = 500

/*RegisterAddHostsClusterInternalServerError Error.

swagger:response registerAddHostsClusterInternalServerError
*/
type RegisterAddHostsClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterAddHostsClusterInternalServerError creates RegisterAddHostsClusterInternalServerError with default headers values
func NewRegisterAddHostsClusterInternalServerError() *RegisterAddHostsClusterInternalServerError {

	return &RegisterAddHostsClusterInternalServerError{}
}

// WithPayload adds the payload to the register add hosts cluster internal server error response
func (o *RegisterAddHostsClusterInternalServerError) WithPayload(payload *models.Error) *RegisterAddHostsClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register add hosts cluster internal server error response
func (o *RegisterAddHostsClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterAddHostsClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
